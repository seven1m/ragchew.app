<%= erb :_user %>

<p><a href="/">home</a></p>

<header class="flex">
  <div class="header-col-grow">
    <%= erb :_club_breadcrumb, locals: { net: @net } %>

    <h1><%== @net.name %> (<%== @net.id %>)</h1>

    <% if session[:started_net] == @net.name %>
      <form action="/close-net/<%== @net.id %>" method="POST">
        <input type="submit" value="Close net!"/>
      </form>
    <% end %>

    <p>
      <%== @net.frequency %> |
      <%== @net.mode %> |
      <%== @net.band %> |
      started at <%== format_time(@net.started_at) %> |
      <%== @net.host %>
    </p>
  </div>

  <div class="header-col">
    <%= club_logo_image_tag(@net.club) %>
  </div>
</header>

<div id="net-map" data-coords='<%= @coords.to_json %>'></div>

<%= erb :_timestamps %>

<h2>Log</h2>

<div id="checkins" data-props="<%= json_for_html_attribute({ netId: @net.id, updateInterval: @update_interval }) %>"></div>

<% if is_logger? %>
  <div id="log-form" data-props="<%= json_for_html_attribute({  }) %>"></div>
<% end %>

<h2 id="messages">Messages</h2>

<% if @user.monitoring_net == @net %>
  <% if @messages.any? %>
    <div class="table-wrapper blue-screen">
      <table class="update-in-place" id="messages-table">
        <thead>
          <tr>
            <th>Call Sign</th>
            <th>Message</th>
            <th>Timestamp</th>
          </tr>
        </thead>
        <tbody>
          <% @messages.each do |message| %>
            <tr>
              <td><%== message[:call_sign] %></td>
              <td class="can-wrap"><%== message[:message] %></td>
              <td><%== format_time(message[:sent_at]) %></td>
            </tr>
          <% end %>
          <% if session.dig(:message_sent, :net_id) == @net.id %>
            <% if @messages.size == session.dig(:message_sent, :count_before) %>
              <tr>
                <td>
                  <%== @user.call_sign %>
                  <em>sending...</em>
                </td>
                <td class="can-wrap"><%== session.dig(:message_sent, :message) %></td>
                <td><%== format_time(Time.now) %></td>
              </tr>
            <% else %>
              <% session.delete(:message_sent) %>
            <% end %>
          <% end %>
        </tbody>
      </table>
    </div>
  <% else %>
    <p class="update-in-place" id="messages-table"><em>no messages yet</em></p>
  <% end %>
  <form action="/message/<%== @net.id %>" method="post" onsubmit="sendMessage(this); return false">
    <input id="message" type="text" name="message" placeholder="type your message" style="width:calc(100% - 100px)"/>
    <input type="submit" value="Send"/>
  </form>
  <p>
    <form action="/unmonitor/<%== @net.id %>" method="post"><button>Stop monitoring this Net</button></form>
  </p>
<% else %>
  <p class="update-in-place" id="messages-table">
    <em><%== @messages.size %> <%== pluralize('message', @messages.size) %>.</em> Click below to participate.
    <form action="/monitor/<%== @net.id %>" method="post"><button>Monitor this Net</button></form>
  </p>
<% end %>

<h2>Monitors</h2>

<div class="table-wrapper">
  <table class="update-in-place" id="monitors-table">
    <thead>
      <tr>
        <th>Call Sign</th>
        <th>Name</th>
        <th>Version</th>
        <th>Status</th>
      </tr>
    </thead>
    <tbody>
      <% @monitors.each do |monitor| %>
        <tr>
          <td><%== monitor.call_sign %></td>
          <td><%== monitor.name %></td>
          <td><%== monitor.version %></td>
          <td><span class="<%== monitor.status %>"><%== monitor.status %></span></td>
        </tr>
      <% end %>
    </tbody>
  </table>
</div>

<script type="module">
  import { h, render } from "https://esm.sh/preact"
  import { Form, Checkins } from "/net.js?_ts=<%== File.stat('public/net.js').mtime.to_i %>"

  const checkinsElm = document.getElementById("checkins")
  if (checkinsElm) {
    const props = JSON.parse(checkinsElm.getAttribute("data-props"))
    render(h(Checkins, props), checkinsElm)
  }

  const formElm = document.getElementById("log-form")
  if (formElm) {
    const props = JSON.parse(formElm.getAttribute("data-props"))
    render(h(Form, props), formElm)
  }
</script>

<script id="map-script">
  const elm = document.getElementById('net-map')
  const coords = JSON.parse(elm.getAttribute('data-coords'))
  buildNetMap()
  updateNetMapCoords(coords)
</script>

<%= erb :_admin_net_controls %>
